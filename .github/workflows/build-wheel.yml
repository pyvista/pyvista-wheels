name: Build Wheel

on:
  pull_request:
  push:
    tags: "*"
    branches:
      - main

jobs:
  build-vtk-osmesa:
    name: Build VTK with OSMesa
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install system requirements
        run: ./apt.sh
      - name: Download VTK
        run: ./download_vtk.sh
      - name: Configure VTK
        run: ./configure_vtk_osmesa.sh
      - name: Build VTK
        run: cd VTK/build && ninja
      - name: Tar Build
        run: tar -zcvf vtk-osmesa-build.tar.gz VTK/build/
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: vtk-build
          path: vtk-osmesa-build.tar.gz
      # Make wheel and upload as artifact for testing purposes
      - name: Build Test Wheel
        run: |
          pip install wheel && \
          cd VTK/build && \
          python setup.py bdist_wheel
      - name: Upload Test Wheel
        uses: actions/upload-artifact@v2
        with:
          name: vtk-osmesa-test-wheel
          path: VTK/build/dist/*.whl

  # Build wheel for all active Python versions
  build-wheels:
    name: OSMesa Wheel Building
    needs: build-vtk-osmesa
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10"]
    steps:
      - name: Install system requirements
        run: sudo apt-get install libosmesa6-dev libgl1-mesa-dev
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/download-artifact@v2
        name: Download VTK Build Artifact
        with:
          name: vtk-build
          path: .
      - name: Untar VTK Build
        run: |
          ls -l
          tar -xzvf vtk-osmesa-build.tar.gz
      - name: Build Wheel
        run: |
          pip install wheel && \
          cd VTK/build && \
          python setup.py bdist_wheel
      - name: Upload Wheel Artifact
        uses: actions/upload-artifact@v2
        with:
          name: vtk-osmesa-wheel-py${{ matrix.python-version }}
          path: VTK/build/dist/*.whl
      - name: Install VTK and test import
        run: |
          pip install VTK/build/dist/*.whl
          python -c "import vtk; print('imported VTK')"
      - name: Install pyvista
        run: pip install pyvista
      - name: Test plot pyvista not off_screen
        run: python -c "import pyvista; pyvista.Sphere().plot(screenshot='screenshot.png');print('Plotted')"
      - name: Upload Test Screenshot
        uses: actions/upload-artifact@v2
        with:
          name: py${{ matrix.python-version }}-screenshot.png
          path: screenshot.png

  # Upload wheels to GH Pages package index
  publish-wheels:
    name: Publish Wheels
    needs: build-wheels
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
      - uses: actions/download-artifact@v2
        name: Download Wheels
        with:
          name: vtk-osmesa-wheel-py**
          path: gh-pages
      - name: Make index
        run: |
          ls -l gh-pages
          python make_index.py
      - name: Upload Package Index as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: gh-pages
          path: gh-pages
  #     - name: Deploy to GH Pages
  #       uses: peaceiris/actions-gh-pages@v3
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         publish_dir: ./gh-pages
