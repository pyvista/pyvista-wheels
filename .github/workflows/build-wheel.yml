name: Build Wheel

on:
  pull_request:
  push:

jobs:
  build-vtk-osmesa:
    name: Build VTK with OSMesa
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install system requirements
        run: |
          apt-get install --no-install-recommends --yes \
              gcc \
              curl \
              git \
              cmake \
              ninja-build \
              build-essential \
              libosmesa6-dev \
              libxt-dev \
              libhdf5-dev \
              libsdl2-mixer-2.0-0 libsdl2-image-2.0-0 libsdl2-2.0-0 \
              libc6-dev libssl-dev libexpat1-dev
      - name: Download VTK
        run: |
          git clone https://github.com/Kitware/VTK.git VTK
          cd VTK
          git checkout v9.1.0
          mkdir build
      - name: Configure VTK
        run: |
          cd VTK/build && \
          cmake -GNinja \
          -DVTK_BUILD_TYPE=Release \
          -DVTK_BUILD_TESTING=OFF \
          -DVTK_BUILD_DOCUMENTATION=OFF \
          -DVTK_BUILD_EXAMPLES=OFF \
          -DVTK_WHEEL_BUILD=ON \
          -DVTK_PYTHON_VERSION=3 \
          -DVTK_WRAP_PYTHON=ON \
          -DVTK_DEFAULT_RENDER_WINDOW_HEADLESS=True \
          -DVTK_DATA_EXCLUDE_FROM_ALL:BOOL=ON \
          -DVTK_MODULE_ENABLE_VTK_PythonInterpreter:STRING=NO \
          -DVTK_OPENGL_HAS_EGL=False \
          -DVTK_OPENGL_HAS_OSMESA=True \
          -DVTK_USE_COCOA=FALSE \
          -DVTK_USE_X=FALSE \
          ..
      - name: Build VTK
        run: cd VTK/build && ninja
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: vtk-build
          path: VTK/build

      - name: build wheel test
        run: |
          pip install wheel && \
          cd VTK/build && \
          python setup.py bdist_wheel
      - name: Upload wheel test
        uses: actions/upload-artifact@v2
        with:
          name: vtk-osmesa-wheel
          path: VTK/build/dist/*.whl


  # build-wheel:
  #   name: OSMesa Wheel Building
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: [3.7, 3.8, 3.9, "3.10"]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Install system requirements
  #       run: |
  #         sudo apt-get install libosmesa6-dev libgl1-mesa-dev
  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install VTK and test import
  #       run: |
  #         pip install vtk-osmesa-9.1.0.dev0-cp38-cp38-linux_x86_64.whl
  #         python -c "import vtk; print('imported VTK')"

  #     - name: Install pyvista
  #       run: pip install pyvista

  #     - name: Test plot pyvista not off_screen
  #       run: python -c "import pyvista; pyvista.Sphere().plot();print('Plotted')"

  #     - name: Test Edge case
  #       run: python extract-edges.py
